name: python-bindings

on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.12']  # bump/add versions later
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v7

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('autonomi/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            autonomi/.venv
          key: ${{ runner.os }}-uv-${{ matrix.python }}-${{ hashFiles('autonomi/uv.lock', 'autonomi/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python }}-

      - name: Build and test
        shell: bash
        working-directory: autonomi
        run: |
          uv venv
          # create lockfile if absent
          test -f uv.lock || uv lock
          uv sync --locked
          uv run python -V
          uv run pip install -U maturin pytest
          uv run maturin develop --uv
          uv run pytest tests/python/test_bindings.py -q
