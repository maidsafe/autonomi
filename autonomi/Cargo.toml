[package]
authors = ["MaidSafe Developers <dev@maidsafe.net>"]
description = "Autonomi client API"
name = "autonomi"
license = "GPL-3.0"
version = "0.2.1"
edition = "2021"
homepage = "https://maidsafe.net"
readme = "README.md"
repository = "https://github.com/maidsafe/safe_network"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["data", "vault"]
full = ["data", "registers", "vault"]
data = []
vault = ["data", "registers"]
fs = ["tokio/fs", "data"]
local = ["sn_networking/local", "sn_evm/local"]
registers = ["data"]
loud = []
external-signer = ["sn_evm/external-signer", "data"]

[dependencies]
bip39 = "2.0.0"
bls = { package = "blsttc", version = "8.0.1" }
bytes = { version = "1.0.1", features = ["serde"] }
curv = { version = "0.10.1", package = "sn_curv", default-features = false, features = [
    "num-bigint",
] }
custom_debug = "~0.6.1"
eip2333 = { version = "0.2.1", package = "sn_bls_ckd" }
const-hex = "1.12.0"
hex = "~0.4.3"
itertools = "~0.12.1"
libp2p = "0.54.1"
rand = "0.8.5"
rmp-serde = "1.1.1"
self_encryption = "~0.30.0"
serde = { version = "1.0.133", features = ["derive", "rc"] }
sn_networking = { path = "../sn_networking", version = "0.19.0" }
sn_peers_acquisition = { path = "../sn_peers_acquisition", version = "0.5.4" }
sn_protocol = { version = "0.17.12", path = "../sn_protocol" }
sn_registers = { path = "../sn_registers", version = "0.4.0" }
sn_evm = { path = "../sn_evm", version = "0.1.1" }
thiserror = "1.0.23"
tokio = { version = "1.35.0", features = ["sync"] }
tracing = { version = "~0.1.26" }
walkdir = "2.5.0"
xor_name = "5.0.0"
futures = "0.3.30"
wasm-bindgen = "0.2.93"
wasm-bindgen-futures = "0.4.43"
serde-wasm-bindgen = "0.6.5"
sha2 = "0.10.6"
blst = "0.3.13"
blstrs = "0.7.1"

[dev-dependencies]
alloy = { version = "0.5.3", default-features = false, features = ["std", "reqwest-rustls-tls", "provider-anvil-node", "sol-types", "json", "signers", "contract", "signer-local", "network", "providers"] }
assert_matches = "1.5.0"
eyre = "0.6.5"
sha2 = "0.10.6"
sn_logging = { path = "../sn_logging", version = "0.2.37" }
sn_peers_acquisition = { path = "../sn_peers_acquisition", version = "0.5.4" }
sn_registers = { path = "../sn_registers", version = "0.4.0", features = ["test-utils"] }
tempfile = "3.6.0"
# Do not specify the version field. Release process expects even the local dev deps to be published.
# Removing the version field is a workaround.
test_utils = { path = "../test_utils" }
tiny_http = "0.11"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
wasm-bindgen-test = "0.3.43"

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.7"
evmlib = { path = "../evmlib", version = "0.1.1", features = ["wasm-bindgen"] }
# See https://github.com/sebcrozet/instant/blob/7bd13f51f5c930239fddc0476a837870fb239ed7/README.md#using-instant-for-a-wasm-platform-where-performancenow-is-not-available
instant = { version = "0.1", features = ["wasm-bindgen", "inaccurate"] }
js-sys = "0.3.70"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-web = "0.1.3"
xor_name = { version = "5.0.0", features = ["serialize-hex"] }

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
